import numpy as np


array = np.array([0, 1, 10, 100, 1000, 10000, 100000, -10, -100, -1000, -10000])


#update = np.sign(array) * (np.abs(array) ** 0.2) * np.log1p(np.abs(array))


#update = np.sign(array) * (np.abs(array) ** 0.1) ** 3  # ????????? ????????? ???????? ? ????????? ??????? ???????? ?????? ??


# np.power(array + 1, 0.5) * np.log1p(array)
#update = np.floor(((np.power(abs(array) + 1, 0.58) * np.log(abs(array)+1))/10)+1)

update = np.floor(((np.power(abs(array) + 1, 0.58) * np.log(abs(array) + 1)) / 10) + 1)

#update = np.floor(((np.power(np.clip(array, 0, None) + 1, 0.58) * np.log(np.clip(array, 0, None) + 1)) / 10) + 1)

# ... ???????????? ??? ...
#update = np.floor(((np.power(np.clip(dataINP_result, 0, None) + 1, 0.58) * np.log(np.clip(dataINP_result, 0, None) + 1)) / 10) + 1)
#dataDC = np.where(dataINP_result > 0, dataDC + update, dataDC - update)
# ... ???????????? ??? ...

#update = np.sign(array) * (np.abs(array) ** 0.1) * np.log1p(np.abs(array))



#update = np.sign(array) * (np.sqrt(np.abs(array)) + 1)


#update = np.sqrt(np.abs(array)) * 2
#update = np.log2(1+array)**2






'''
sums = np.zeros_like(array, dtype=float)  # ????? ??? ??????? ????????
counts = np.zeros_like(array, dtype=int)  # ?????????? ????????? ??? ??????? ????????
sum_array = np.zeros_like(array, dtype=int)

# ??????? ??? ?????????? ????????
def update_array(new_values):
    global sums, counts
    for i, new_value in enumerate(new_values):
        counts[i] += 1
        sums[i] += new_value
        # ????????? ??????? ????????
        average = sums[i] / counts[i]
        print(f"Среднее значение для элемента {i}: {average}")
        

# ?????? ?????????
updates = np.array([[1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                    [2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
                    ])

for update in updates:
    update_array(update)
'''
    

print(update)